name: CorpX Deploy Workflow

on:
  workflow_dispatch:

  push:
    branches:
      - main
    # paths:
    #   - "!.gitignore"
    #   - "!README.md"
    #   - "!CONTRIBUTING.md"
    #   - "!LICENSE"

  pull_request:
    types:
      - opened
      - reopened
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Test job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Lint everything
        run: npm run lint:all

      - name: Run custom scripts
        env:
          URL_CHECKER_TIMEOUT: ${{ vars.URL_CHECKER_TIMEOUT }}
        run: |
          node script/url-checker.js -t $URL_CHECKER_TIMEOUT

  build:
    name: Build job
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build the static pages
        env:
          REPOSITORY_NAME: ${{ vars.REPOSITORY_NAME }}
        run: |
          PATH_PREFIX=$(echo $REPOSITORY_NAME | cut -d'/' -f2-)
          npm run prod

      - name: Upload the artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    name: Deploy job
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment

      - name: Create an issue
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          DATE=$(date +'%Y-%m-%d %H:%M:%S')
          gh issue create \
            --repo ${{ github.repository }} \
            --title "${DATE} - Deployment: ${{ job.status }}" \
            --body "URL: ${{ steps.deployment.outputs.page_url }}"
